// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: draft/ydb_s3_internal_v1.proto

package Ydb_S3Internal_V1

import (
	context "context"
	Ydb_S3Internal "github.com/ydb-platform/ydb-go-genproto/draft/protos/Ydb_S3Internal"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	S3InternalService_S3Listing_FullMethodName = "/Ydb.S3Internal.V1.S3InternalService/S3Listing"
)

// S3InternalServiceClient is the client API for S3InternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type S3InternalServiceClient interface {
	S3Listing(ctx context.Context, in *Ydb_S3Internal.S3ListingRequest, opts ...grpc.CallOption) (*Ydb_S3Internal.S3ListingResponse, error)
}

type s3InternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewS3InternalServiceClient(cc grpc.ClientConnInterface) S3InternalServiceClient {
	return &s3InternalServiceClient{cc}
}

func (c *s3InternalServiceClient) S3Listing(ctx context.Context, in *Ydb_S3Internal.S3ListingRequest, opts ...grpc.CallOption) (*Ydb_S3Internal.S3ListingResponse, error) {
	out := new(Ydb_S3Internal.S3ListingResponse)
	err := c.cc.Invoke(ctx, S3InternalService_S3Listing_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// S3InternalServiceServer is the server API for S3InternalService service.
// All implementations must embed UnimplementedS3InternalServiceServer
// for forward compatibility
type S3InternalServiceServer interface {
	S3Listing(context.Context, *Ydb_S3Internal.S3ListingRequest) (*Ydb_S3Internal.S3ListingResponse, error)
	mustEmbedUnimplementedS3InternalServiceServer()
}

// UnimplementedS3InternalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedS3InternalServiceServer struct {
}

func (UnimplementedS3InternalServiceServer) S3Listing(context.Context, *Ydb_S3Internal.S3ListingRequest) (*Ydb_S3Internal.S3ListingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method S3Listing not implemented")
}
func (UnimplementedS3InternalServiceServer) mustEmbedUnimplementedS3InternalServiceServer() {}

// UnsafeS3InternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to S3InternalServiceServer will
// result in compilation errors.
type UnsafeS3InternalServiceServer interface {
	mustEmbedUnimplementedS3InternalServiceServer()
}

func RegisterS3InternalServiceServer(s grpc.ServiceRegistrar, srv S3InternalServiceServer) {
	s.RegisterService(&S3InternalService_ServiceDesc, srv)
}

func _S3InternalService_S3Listing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ydb_S3Internal.S3ListingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(S3InternalServiceServer).S3Listing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: S3InternalService_S3Listing_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(S3InternalServiceServer).S3Listing(ctx, req.(*Ydb_S3Internal.S3ListingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// S3InternalService_ServiceDesc is the grpc.ServiceDesc for S3InternalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var S3InternalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "Ydb.S3Internal.V1.S3InternalService",
	HandlerType: (*S3InternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "S3Listing",
			Handler:    _S3InternalService_S3Listing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "draft/ydb_s3_internal_v1.proto",
}
